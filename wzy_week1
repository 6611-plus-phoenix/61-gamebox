import sys
import os
import random
import itertools

def trim(seqs,direction=0):#移动添0
    return([0,0,0,0]+[n for n in seqs if n])[-4:] if direction else ([n for n in seqs if n]+[0,0,0,0])[:4]
    
def sum_seqs(seqs,direction=0):#合并相同数字
    if seqs[1] and seqs[2] and seqs[1]==seqs[2]:
        return trim([seqs[0],seqs[1]*2,0,seqs[3]],direction=direction)
    if seqs[0] and seqs[1] and seqs[0]==seqs[1]:
        seqs[0],seqs[1]=seqs[0]*2,0
    if seqs[2] and seqs[3] and seqs[2]==seqs[3]:
        seqs[2],seqs[3]=seqs[2]*2,0
    return trim(seqs,direction=direction)
    
def up(grid):
    for col in [0,1,2,3]:
        for _idx, n in enumerate (sum_seqs(trim([row[col] for row in grid]))):
            grid[_idx][col]=n
    return grid

def down(grid):
    for col in [0,1,2,3]:
        for _idx, n in enumerate (sum_seqs(trim([row[col] for row in grid],direction=1),direction=1)):
            grid[_idx][col]=n
    return grid

def left(grid):
    return [sum_seqs(trim(row)) for row in grid]

def right(grid):
    return [sum_seqs(trim(row,direction=1),direction=1) for row in grid]

class Game:
    grid=[]#定义棋盘
    controls=["w","a","s","d"]#用wasd控制上下左右
    
    def rnd_field(self):#随机生成2，4
        number=random.choice([2,4,2,4,2,4,2,4,2,4])
        x,y=random.choice([(x,y) for x,y in itertools.product([0,1,2,3],[0,1,2,3]) if self.grid[x][y]==0])
        self.grid[x][y]=number
    
    def print_screen(self):#输出界面
        os.system('clear')#清空屏幕
        print('-'*21)#棋盘外观
        for row in self.grid:
            print('|{}|'.format("|".join([str(col or '').center(4) for col in row])))
            print('-'*21)
                  
    def logic(self,control):#输入wasd后的逻辑判断
        grid={'w':up,'a':left,'s':down,'d':right}[control]([[c for c in r]for r in self.grid])
        if grid!=self.grid:#若wasd后棋盘不变则不生成新数字
            del self.grid[:]
            self.grid.extend(grid)#刷新棋盘
            if [n for n in itertools.chain(*grid) if n>=2048]:
                return 1,"you win"
            self.rnd_field()
        else:
            if not [1 for g in [f(gird) for f in [up,down,left,right]] if g!=self.grid]:
                return -1,"you loss"
        return 0,''#1:you win  -1:you loss 0:继续游戏
    
    def main_loop(self):
        del self.grid[:]#清空
        self.grid.extend([[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]])#初始化棋盘
        self.rnd_field()
        self.rnd_field()
        while True:
            self.print_screen()
            control=input('input w/a/s/d:')
            if control in self.controls:#不接受输入非wasd的字母
                status ,info =self.logic(control)
                if status:#打印信息
                    print(info)
                    if input('Start another game?[Y/n]').lower:#大小写输入无关
                        break
                    else:
                        sys.exit(0)
        self.main_loop()
        
Game().main_loop() 
